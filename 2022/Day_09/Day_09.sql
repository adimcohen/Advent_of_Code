--Single-Line table function to keep the query inline
create or alter function fn_Day9_GetNextTailPosition(@HX int,
													@HY int,
													@TX int,
													@TY int) returns @t table(Next_X int, Next_Y int)
as
begin
	insert into @t(Next_X, Next_Y)
	select case when @HX - @TX = 2 or (@HX - @TX = 1 and abs(@HY - @TY) = 2)
							then @TX + 1
						when @TX - @HX = 2 or (@TX - @HX = 1 and abs(@HY - @TY) = 2)
							then @TX - 1
						else @TX
					end,
				case when @HY - @TY = 2 or (@HY - @TY = 1 and abs(@HX - @TX) = 2)
							then @TY + 1
						when @TY - @HY = 2 or (@TY - @HY = 1 and abs(@HX - @TX) = 2)
							then @TY - 1
						else @TY
					end
	return
end
GO
declare @Str varchar(max) =
'L 2
R 1
U 1
D 2
R 1
U 2
D 1
R 1
L 2
U 2
L 2
R 2
D 2
U 2
R 1
U 2
D 2
R 1
D 2
U 2
R 1
L 1
D 1
R 1
L 2
D 1
L 1
R 2
U 2
R 2
D 1
R 2
L 1
R 2
D 1
L 1
R 1
U 2
R 1
L 2
D 1
R 1
U 2
R 1
D 1
R 1
D 1
U 2
D 1
U 1
D 1
L 2
R 2
L 2
R 1
D 2
R 1
L 1
R 2
L 2
R 2
U 1
R 1
L 2
D 1
R 1
D 2
U 2
R 2
L 1
R 1
U 2
R 2
L 2
D 2
R 1
L 2
D 1
L 2
D 1
L 2
R 1
D 1
L 2
D 2
U 1
L 1
R 2
U 1
D 1
U 1
L 1
R 2
U 2
L 1
R 1
U 2
R 2
D 1
U 2
D 2
U 2
D 2
L 1
D 2
R 1
L 2
U 2
R 1
D 2
U 2
D 2
R 3
L 2
U 1
D 2
R 2
U 3
L 3
U 3
L 3
U 1
R 2
L 1
D 1
U 1
D 3
L 1
D 2
U 1
D 1
R 2
D 3
R 1
D 2
L 2
R 2
D 1
U 1
L 1
U 3
L 1
U 3
D 3
L 3
U 3
R 3
U 1
D 1
R 3
U 3
D 1
U 3
L 3
D 3
R 2
L 3
U 2
D 1
U 3
L 3
R 2
U 2
R 1
L 3
D 3
L 2
R 2
D 2
L 3
R 1
L 1
U 2
L 2
U 1
L 2
U 3
R 1
D 3
R 3
U 1
R 3
L 2
D 3
L 1
U 3
R 1
U 1
L 2
U 3
R 3
L 3
D 3
L 2
R 1
U 3
L 3
R 3
D 3
L 3
U 3
R 3
D 2
R 2
L 2
R 3
U 3
L 2
U 3
L 3
U 3
R 1
D 3
U 1
D 1
L 2
R 3
L 3
D 2
L 1
D 2
L 3
D 1
L 4
U 1
R 3
L 3
R 2
L 1
R 1
U 1
D 4
R 1
U 2
L 4
U 4
D 4
U 2
D 2
U 4
D 2
R 4
U 1
L 3
U 1
L 1
D 3
R 1
L 4
D 4
U 4
R 3
D 1
R 1
L 2
R 2
U 4
R 3
U 3
D 1
L 4
R 3
L 3
R 3
D 3
R 4
L 4
R 3
U 3
D 3
R 3
L 2
R 1
D 3
U 1
R 3
L 4
U 2
R 4
U 4
L 2
R 1
L 4
R 1
D 3
U 4
R 2
D 2
L 2
U 2
R 1
L 1
R 2
U 4
D 3
R 1
L 3
U 2
D 2
L 2
D 2
R 2
L 1
U 4
L 4
R 3
D 2
R 3
L 3
D 1
R 4
U 4
R 1
U 3
D 2
R 2
D 2
L 3
D 4
L 1
U 4
L 4
U 1
D 3
L 1
U 1
D 4
L 1
U 2
L 2
U 3
L 1
U 1
L 1
U 3
R 4
D 1
R 1
U 5
R 4
L 4
U 1
R 1
D 2
R 2
D 3
L 1
D 3
L 4
R 1
U 4
D 5
L 4
D 5
R 4
U 3
R 4
D 3
R 5
U 5
D 4
R 1
D 2
U 5
D 5
U 5
L 2
D 4
L 1
R 1
L 2
D 2
L 1
D 4
U 5
D 2
L 4
R 3
L 4
U 1
D 5
U 3
R 3
L 1
D 3
L 1
R 3
L 3
D 4
L 3
U 1
D 2
R 3
L 3
D 5
U 4
L 1
R 3
L 1
U 2
D 1
L 2
D 4
L 1
D 2
R 2
L 2
D 5
R 2
D 1
U 1
D 4
R 4
L 3
D 1
U 3
D 3
L 5
D 5
L 1
U 3
L 5
D 3
R 5
U 4
L 3
U 4
L 1
R 4
D 1
U 2
R 1
U 4
R 2
L 1
R 2
L 4
D 2
R 1
D 1
U 1
D 1
R 4
L 3
R 4
U 3
R 4
U 6
R 5
L 4
U 5
D 5
L 3
R 2
U 3
D 5
U 3
D 4
U 6
D 6
U 3
R 3
D 2
R 1
L 6
R 2
D 5
L 1
U 3
D 2
U 6
L 2
U 4
R 3
U 3
L 4
U 6
R 4
U 1
L 5
U 2
D 4
U 3
L 6
U 5
D 4
U 4
R 6
L 3
R 2
L 6
D 5
R 5
L 4
D 2
R 5
U 2
L 5
U 6
D 6
R 5
L 1
D 1
U 3
R 3
D 2
U 3
R 3
U 4
D 4
L 3
R 4
U 6
D 5
U 2
R 2
D 4
U 3
R 2
U 6
L 2
R 3
L 3
U 1
D 3
R 3
U 1
D 6
R 2
U 2
L 2
R 6
U 6
L 1
R 6
L 3
U 1
D 2
R 1
D 2
L 6
D 1
L 6
R 5
D 6
U 3
L 2
R 6
L 2
D 4
R 5
L 1
R 2
L 4
U 3
D 6
U 6
D 4
L 5
U 4
R 4
D 1
U 1
R 3
L 3
D 7
L 6
R 2
D 2
U 7
L 6
R 3
U 7
L 6
R 4
U 1
L 2
D 1
L 7
R 4
L 3
R 5
U 7
R 4
D 6
L 6
R 3
L 7
R 7
L 2
D 7
U 1
R 3
U 6
D 4
U 1
D 2
U 4
D 7
R 2
L 1
D 2
U 3
L 7
U 6
R 2
U 1
R 4
L 3
D 7
R 7
L 7
D 1
L 4
R 6
L 4
R 5
L 4
D 7
R 4
L 5
U 7
D 1
R 1
D 2
L 7
D 4
R 2
D 1
L 7
D 1
L 4
R 3
D 6
L 6
U 1
L 7
R 4
L 2
U 6
D 3
L 1
U 6
D 2
U 5
L 5
D 6
U 7
D 6
R 4
U 6
R 1
U 3
L 1
U 4
R 7
L 3
U 6
L 6
U 5
D 7
R 4
D 3
U 7
R 2
L 2
U 2
L 5
R 4
L 2
U 5
D 2
U 3
D 2
R 5
L 1
R 5
U 3
R 1
D 7
R 4
L 6
D 7
U 1
R 2
D 6
R 2
U 2
D 8
L 7
U 5
L 8
D 7
L 5
R 1
U 7
D 4
L 4
D 1
L 1
U 8
L 7
U 4
L 8
U 7
R 6
U 2
R 7
L 4
U 2
R 7
U 5
R 6
D 1
L 3
D 1
R 8
U 5
D 3
U 4
L 4
U 5
R 8
D 3
U 1
R 8
L 6
U 8
L 3
U 2
R 5
D 8
L 8
R 3
L 3
D 7
R 1
U 2
L 7
D 6
R 2
D 6
U 4
D 6
U 6
R 7
U 1
L 1
D 4
U 8
D 4
L 6
D 4
U 5
L 3
U 8
R 4
U 3
L 4
R 2
L 1
R 1
L 2
D 3
L 4
D 6
L 5
D 3
R 3
D 4
L 5
R 4
L 6
U 5
L 1
D 3
U 4
R 6
D 2
U 1
L 3
D 9
L 6
U 9
R 3
D 8
L 1
R 9
U 4
R 2
D 7
R 7
D 4
U 8
R 5
L 3
R 2
L 3
D 5
L 1
U 9
R 7
U 3
L 9
U 8
L 6
R 7
U 1
L 3
R 8
D 9
U 1
D 9
R 8
D 6
L 8
R 5
L 6
D 7
R 3
D 5
R 4
D 2
L 4
D 6
U 3
D 2
R 1
L 2
R 8
D 3
L 2
D 2
U 2
R 9
U 1
L 7
R 6
L 2
R 5
U 6
D 7
U 7
R 6
L 3
R 7
D 5
L 4
D 3
U 7
R 1
U 4
L 5
D 7
U 2
L 5
D 8
L 7
U 3
D 5
L 5
D 7
L 1
U 1
D 9
U 3
L 9
U 5
D 8
U 6
L 3
R 9
U 2
R 8
L 9
U 4
L 5
R 3
U 6
R 7
U 8
D 3
L 1
D 5
R 6
U 9
L 6
D 9
L 10
D 4
U 7
D 1
U 6
L 2
U 1
R 8
U 5
L 7
R 10
U 3
D 1
R 5
U 8
R 8
D 6
R 10
D 10
L 10
D 4
R 5
U 9
R 7
L 3
D 5
R 6
U 7
D 8
R 8
L 4
R 10
L 2
U 7
R 7
D 3
U 9
R 5
D 10
U 3
R 5
L 8
D 4
U 9
R 8
D 2
R 4
L 5
R 10
D 5
R 5
U 1
D 1
L 1
U 2
D 5
R 1
L 10
D 7
L 8
D 2
R 6
D 3
L 7
D 3
L 4
U 10
R 10
D 7
L 4
U 4
R 3
U 7
D 7
L 1
D 7
L 2
U 5
R 8
U 7
D 10
L 8
D 8
R 4
U 1
R 1
U 8
D 6
R 5
U 2
D 1
R 9
U 9
D 10
L 9
U 4
R 10
U 7
D 6
L 9
U 1
L 10
R 4
D 4
L 5
D 5
U 2
D 6
R 1
D 5
L 1
D 2
L 11
R 2
U 5
R 9
U 9
L 11
U 4
L 6
D 8
L 6
U 11
R 7
U 8
R 10
D 5
U 8
R 11
D 3
U 5
R 8
D 6
R 10
U 9
D 5
R 3
U 1
L 10
D 5
U 7
R 7
L 11
U 5
D 3
U 5
L 11
U 10
L 3
R 2
D 7
L 10
U 7
L 8
R 7
U 6
D 2
L 2
R 2
U 8
L 6
R 8
D 9
U 10
R 5
D 6
R 5
L 1
D 6
L 2
D 3
L 5
U 11
L 11
R 7
U 7
D 7
R 10
U 5
R 10
U 2
D 5
R 2
U 8
D 7
L 6
D 3
R 6
L 10
D 6
U 5
L 1
D 3
U 2
L 3
U 4
D 7
U 4
L 10
D 8
L 11
U 11
D 4
U 11
R 10
L 10
U 9
R 3
L 6
D 8
R 8
D 10
R 8
D 3
R 7
L 5
R 5
L 8
U 10
L 7
D 10
R 5
D 4
R 6
D 3
L 7
R 7
U 12
R 3
U 2
R 7
D 10
R 12
D 8
U 4
R 2
D 11
L 7
U 3
L 12
D 12
U 1
R 10
L 5
D 4
U 7
R 1
L 12
R 7
U 8
R 8
L 8
R 9
L 1
U 3
L 4
R 3
L 8
R 3
L 1
D 1
U 9
D 9
U 8
R 7
L 9
D 12
R 1
D 8
U 5
R 9
U 6
D 2
L 5
R 6
U 11
D 2
U 4
D 10
L 8
U 10
R 11
U 5
R 6
D 11
R 10
D 9
U 5
D 1
R 2
D 11
R 3
U 5
R 3
D 7
R 6
L 2
U 1
L 9
D 1
R 9
D 12
R 11
D 12
U 8
L 12
D 11
U 3
D 10
L 6
R 10
U 9
R 10
D 5
R 9
D 11
L 1
D 4
L 10
D 3
L 9
R 5
U 3
L 2
D 6
L 1
D 9
L 9
D 9
U 11
L 11
R 8
D 2
U 7
L 6
U 13
R 8
D 7
R 11
U 5
R 12
U 5
D 5
U 10
D 13
U 9
R 9
U 6
D 7
R 6
D 10
L 7
D 9
U 2
R 7
U 13
L 3
U 5
R 12
U 10
L 10
R 6
L 4
D 11
U 8
L 8
D 4
R 12
D 3
R 13
D 1
U 10
R 9
L 9
U 3
R 4
L 11
U 10
L 5
R 10
L 6
D 9
R 2
D 13
U 11
R 9
D 9
L 9
R 11
U 8
D 9
R 4
L 9
U 2
R 4
L 11
R 12
U 7
D 6
L 5
D 4
U 5
D 9
R 8
D 6
U 4
L 5
U 11
R 2
U 9
L 3
D 12
R 5
D 12
L 12
D 2
U 3
L 9
D 2
R 10
L 2
U 5
R 7
L 10
U 12
D 10
R 4
D 10
R 11
U 10
R 10
U 11
D 5
U 12
L 10
D 13
R 13
D 3
L 8
U 3
D 8
R 13
D 2
R 13
U 13
D 1
L 5
D 9
L 1
U 11
R 3
U 4
D 6
U 6
R 5
D 10
U 14
D 10
R 6
D 12
U 5
D 1
R 10
D 11
L 1
U 8
L 12
R 10
D 5
U 14
R 14
D 2
R 4
U 9
L 7
R 12
U 9
D 8
L 2
U 3
D 2
L 4
U 10
R 13
U 10
D 1
L 6
D 4
L 4
D 11
U 6
R 12
D 2
L 13
R 11
U 2
L 3
D 5
U 13
D 1
U 7
L 3
R 6
L 10
D 4
R 4
U 11
L 5
D 13
U 4
R 2
L 11
U 13
L 5
D 4
U 6
L 11
U 5
R 4
U 5
L 1
D 13
U 13
R 14
U 10
D 11
R 2
L 9
D 11
R 5
U 14
L 10
D 9
U 5
R 2
U 10
L 11
R 9
U 7
L 12
U 2
L 4
D 3
U 7
D 11
U 8
L 7
R 8
U 10
D 7
L 8
R 1
L 5
R 4
U 10
R 14
L 9
U 11
D 10
U 10
R 9
L 1
R 7
L 4
U 1
R 6
U 12
D 5
L 14
D 5
U 9
R 5
D 7
R 2
L 7
D 5
R 10
L 8
D 7
L 5
U 9
L 13
U 14
L 2
D 2
R 9
U 5
R 8
D 14
L 2
R 6
L 8
U 2
L 4
D 11
U 5
R 11
D 7
L 3
U 5
R 15
L 3
U 10
R 2
L 1
R 9
U 9
R 13
U 9
L 8
R 13
D 4
R 13
D 2
U 2
L 14
D 3
L 4
D 1
L 11
D 11
R 11
U 3
L 1
D 9
U 8
D 2
R 11
D 4
U 13
L 12
U 14
D 7
L 7
D 4
R 14
D 9
R 8
U 8
D 10
U 4
D 8
U 8
D 14
R 7
U 11
D 14
R 5
U 11
R 13
L 9
U 14
D 9
R 15
L 11
D 6
L 13
U 11
R 13
D 10
L 4
D 9
L 3
R 1
D 13
U 13
L 1
R 5
D 5
U 2
R 7
D 6
R 9
D 15
U 15
R 11
D 13
R 14
L 11
R 13
D 4
R 16
L 3
U 2
D 12
R 5
L 13
D 8
U 4
D 3
R 13
L 6
D 15
U 6
R 6
D 6
R 3
L 5
D 15
R 1
D 4
U 6
D 7
R 14
D 16
L 6
D 8
U 10
D 4
R 13
D 11
U 4
D 3
U 16
L 6
D 5
U 15
L 14
D 8
R 2
D 16
R 10
U 15
R 16
D 6
R 15
L 15
U 11
R 6
L 6
U 10
D 11
L 5
D 8
L 15
R 4
U 10
D 4
R 3
U 1
L 12
D 16
L 6
U 10
R 5
L 4
U 11
R 14
U 3
L 16
U 12
D 14
L 3
R 8
L 10
R 10
D 14
L 15
D 3
R 2
U 16
D 4
L 13
U 5
R 6
U 7
R 3
L 13
U 6
D 5
U 14
R 12
U 15
L 7
U 15
D 11
L 13
U 13
R 2
D 17
R 17
L 11
R 9
L 16
U 16
D 4
L 16
U 10
L 4
U 2
D 12
U 1
R 8
D 8
U 15
D 12
R 10
U 1
R 1
L 12
R 6
U 13
L 12
U 8
L 2
R 13
D 9
U 15
L 6
U 1
D 11
L 1
U 13
D 4
L 14
U 7
D 2
L 15
U 15
R 7
L 11
U 16
R 12
D 14
L 17
U 10
D 2
R 5
L 6
D 4
U 15
L 16
R 12
D 7
U 1
D 7
L 10
D 3
L 6
U 7
D 16
L 16
U 12
R 17
L 16
U 2
R 1
U 9
D 1
R 3
U 4
L 4
D 14
U 5
D 7
L 16
D 4
U 16
R 7
L 4
U 2
R 13
U 3
R 6
L 15
R 3
D 13
L 10
R 14
L 14
D 17
R 6
L 12
R 5
U 1
R 2
L 11
R 3
D 13
U 4
D 5
R 5
L 9
D 1
U 2
R 11
D 17
R 14
D 3
R 1
L 1
D 15
U 3
R 16
L 1
U 5
L 4
U 5
L 18
R 15
D 10
R 8
D 15
U 10
R 2
U 16
R 14
U 12
L 14
D 6
L 6
D 1
R 12
D 5
L 13
D 9
L 11
D 7
L 15
U 16
D 7
R 17
L 13
R 1
D 15
L 5
U 17
R 15
D 4
L 1
U 16
D 18
U 4
L 6
U 14
D 3
R 1
D 10
U 16
L 10
U 2
R 1
U 8
D 14
L 17
D 2
L 8
D 17
L 10
D 4
L 1
U 17
L 9
U 7
D 14
U 11
D 5
L 13
U 11
L 17
R 13
U 8
D 7
R 18
L 18
R 17
L 9
D 5
R 12
U 10
D 17
R 18
D 8
L 9
R 16
D 6
L 17
D 18
U 5
R 7
D 17
L 4
D 14
U 17
R 6
L 7
R 7
L 15
R 6
L 11
U 12
R 16
L 8
U 10
L 2
D 15
L 5
R 16
U 10
L 9
R 6
D 13
L 9
U 16
L 16
R 16
D 13
L 13
U 16
L 3
D 18
R 11
L 13
U 9
R 6
L 3
U 8
L 2
D 13
L 2
R 12
D 9
R 2
L 5
D 16
R 6
U 9
D 8
R 10
D 11
R 17
U 5
D 11
U 18
R 9
D 2
U 2
R 9
D 9
U 1
R 11
L 18
D 6
U 9
L 4
R 10
D 17
L 16
D 5
U 5
R 16
D 8
U 6
D 3
U 12
L 2
R 5
D 1
L 6
U 9
D 12
L 1
D 14
R 19
L 7
R 9
L 3
R 4
L 15
D 10
U 5
D 14
L 7
D 5
L 5
D 18
U 15
L 5
U 7
R 17
U 19
D 19
L 11
D 6
R 13
D 11
R 2
L 8
R 15
L 17
D 17
R 5
U 8
D 1
U 13
R 8
L 18
U 19
R 1
D 17
L 9
R 19
D 6
R 2
D 17
U 2
D 9
R 5
U 11
L 12
U 19
D 13'

drop table if exists #Steps
drop table if exists #Numbers

--Number Table
;with rec as
	(select 1 Num
	union all
	select Num + 1
	from rec
	where Num < 32767
	)
select Num
into #Numbers
from rec
option (maxrecursion 32767)
create unique clustered index IX_#Numbers on #Numbers(Num)

--Parse and explode steps
select row_number() over(order by I.ID, Num) StepID, Direction
into #Steps
from (select row_number() over(order by (select 1)) ID, [value]
		from string_split(replace(@Str, char(10), ''), char(13)) i
		) i
	cross apply (select left([value], 1) Direction,
						cast(substring([value], 3, len([value])) as int) StepCount) i1
	inner join #Numbers with (forceseek) on Num <= StepCount
create unique clustered index IX_#Steps on #Steps(StepID)

--Solution #1
;with rec as
	(select cast(0 as int) HX, cast(0 as int) HY, cast(0 as int) TX, cast(0 as int) TY, cast(0 as int) s, cast(null as char(1)) LastDirection
		union all
		select h.New_HX, h.New_HY, t.Next_X, t.Next_Y, cast(s.StepID as int), cast(Direction as char(1))
		from rec r
			inner join #Steps s on s.StepID = r.s + 1
			cross apply (select case Direction
									when 'L' then HX - 1
									when 'R' then HX + 1
									else HX
								end New_HX,
								case Direction
									when 'U' then HY + 1
									when 'D' then HY - 1
									else HY
								end New_HY) h
			cross apply fn_Day9_GetNextTailPosition(New_HX, New_HY, TX, TY) t
	)
	, d as
	(select distinct TX, TY
		from rec
	)
select count(*) Answer2
from d
option (maxrecursion 32767)

--Solution #1
;with rec as
	(select cast(0 as int) HX, cast(0 as int) HY, cast(0 as int) TX, cast(0 as int) TY, cast(0 as int) s, cast(null as char(1)) LastDirection
			, cast(0 as int) K1X, cast(0 as int) K1Y
			, cast(0 as int) K2X, cast(0 as int) K2Y
			, cast(0 as int) K3X, cast(0 as int) K3Y
			, cast(0 as int) K4X, cast(0 as int) K4Y
			, cast(0 as int) K5X, cast(0 as int) K5Y
			, cast(0 as int) K6X, cast(0 as int) K6Y
			, cast(0 as int) K7X, cast(0 as int) K7Y
			, cast(0 as int) K8X, cast(0 as int) K8Y
		union all
		select h.New_HX, h.New_HY, t.Next_X, t.Next_Y, cast(s.StepID as int), cast(Direction as char(1))
			, cast(k1.Next_X as int), cast(k1.Next_Y as int)
			, cast(k2.Next_X as int), cast(k2.Next_Y as int)
			, cast(k3.Next_X as int), cast(k3.Next_Y as int)
			, cast(k4.Next_X as int), cast(k4.Next_Y as int)
			, cast(k5.Next_X as int), cast(k5.Next_Y as int)
			, cast(k6.Next_X as int), cast(k6.Next_Y as int)
			, cast(k7.Next_X as int), cast(k7.Next_Y as int)
			, cast(k8.Next_X as int), cast(k8.Next_Y as int)
		from rec r
			inner join #Steps s on s.StepID = r.s + 1
			cross apply (select case Direction
									when 'L' then HX - 1
									when 'R' then HX + 1
									else HX
								end New_HX,
								case Direction
									when 'U' then HY + 1
									when 'D' then HY - 1
									else HY
								end New_HY) h
			cross apply fn_Day9_GetNextTailPosition(h.New_HX, h.New_HY, K1X, K1Y) k1
			cross apply fn_Day9_GetNextTailPosition(k1.Next_X, k1.Next_Y, K2X, K2Y) k2
			cross apply fn_Day9_GetNextTailPosition(k2.Next_X, k2.Next_Y, K3X, K3Y) k3
			cross apply fn_Day9_GetNextTailPosition(k3.Next_X, k3.Next_Y, K4X, K4Y) k4
			cross apply fn_Day9_GetNextTailPosition(k4.Next_X, k4.Next_Y, K5X, K5Y) k5
			cross apply fn_Day9_GetNextTailPosition(k5.Next_X, k5.Next_Y, K6X, K6Y) k6
			cross apply fn_Day9_GetNextTailPosition(k6.Next_X, k6.Next_Y, K7X, K7Y) k7
			cross apply fn_Day9_GetNextTailPosition(k7.Next_X, k7.Next_Y, K8X, K8Y) k8
			cross apply fn_Day9_GetNextTailPosition(k8.Next_X, k8.Next_Y, TX, TY) t
	)
	, d as
	(select distinct TX, TY
		from rec
	)
select count(*) Answer2
from d
option (maxrecursion 32767)